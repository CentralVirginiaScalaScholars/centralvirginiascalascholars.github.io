{"name":"Central Virginia Scala Scholars","tagline":"Scala Scholars Documentation Resources","body":"# Central Virginia Scala Scholars\r\n\r\nThis site is a work in progress. Fragments below are from the first meeting notes.\r\n\r\n## Discussion\r\n\r\n* Documentation\r\n    * [Scaladocs](http://www.scala-lang.org/api/current/) ~ only for reference; don't exepect Java or .NET comprehensiveness.\r\n    * [Official Tutorial](http://docs.scala-lang.org/tutorials/) ~ mixed quality, but mostly good\r\n    * [Twitter's Scala School](http://twitter.github.io/scala_school/)\r\n    * http://ktoso.github.io/scala-types-of-types/\r\n    * [Option Cheat Cheet](http://blog.tmorris.net/posts/scalaoption-cheat-sheet/)\r\n    * [Top 5 Free Books to Learn Scala Programming](http://javarevisited.blogspot.sg/2014/01/top-5-free-books-to-learn-scala-programming-PDF.html)\r\n    * \r\n    \r\n\r\n* News {Feeds,Aggregators,Sources}\r\n    * [Scala Google+ Community](https://plus.google.com/u/1/communities/100488232353575866687)\r\n    * [Scala in Hacker News](https://hn.algolia.com/?q=scala#!/story/sort_by_date/0/scala)\r\n    * [Flipboard: Scala & FP in the Enterprise](https://flipboard.com/section/scala-%26-fp-in-the-enterprise-bN3uU4)\r\n    * \r\n    \r\n\r\n* Compelling features\r\n    * Case classes\r\n    * Pattern matching\r\n    * Functional collections\r\n    * For comprehensions\r\n    * Options\r\n    * Traits\r\n   \r\n* <s>Simple</s> Scala Build Tool\r\n    * Love or Hate?\r\n    * `.sbt` vs. `.scala` build definitions\r\n\r\n\r\n### Basic SBT Build Definition\r\n\r\n\r\nBasic `build.sbt` file\r\n\r\n\r\n```scala\r\nname := \"hello\"\r\n\r\nversion := \"1.0\"\r\n\r\nscalaVersion := \"2.10.2\"\r\n```\r\n\r\nAssumes your project structure is:\r\n\r\n```\r\nhello/                  # your project's base directory\r\n\r\n    Hello.scala         # a source file in your project (could be in\r\n                        #   src/main/scala too)\r\n\r\n    build.sbt           # build.sbt is part of the source code for the\r\n                        #   build definition project inside project/\r\n\r\n```\r\n\r\n\r\n### Frameworks\r\n\r\n* Sinatra: <http://www.scalatra.org>\r\n    * See Finatra\r\n* Scalate: <http://scalate.fusesource.org>\r\n* Lift: <http://demo.liftweb.net> (dying out?)\r\n* Play 2: <http://www.playframework.com>\r\n    * Built on Akka... very positive\r\n    * Runs well on Amazon micro instances\r\n* [ThoughtWorks Technology Radar](http://www.thoughtworks.com/radar/#/languages-and-frameworks) on [Play 2](http://www.thoughtworks.com/radar/#/languages-and-frameworks/669)\r\n* [Real World Scala Dependency Injection](http://jonasboner.com/2008/10/06/real-world-scala-dependency-injection-di/)\r\n\r\n\r\n## Goal of Group\r\n\r\n* Help people find answers to their Scala problems\r\n* Communications options:\r\n    * Gist?\r\n    * G+?\r\n    * IRC? -> with history\r\n    * Just email?\r\n    * Email + IRC\r\n\r\n\r\n## Presentation Ideas\r\n\r\n* Implicit Party/Parlor Tricks\r\n* Flash Talks\r\n* Bringing new Developers to Scala\r\n* Implicits\r\n* Algebraic Types\r\n* Coding Challenge\r\n* Getting Started Guide\r\n* Positive Examples\r\n* Lessons Learned\r\n* Spark and Scalding \r\n* Akka\r\n* GraphX\r\n* How OO + Functional wins\r\n* Favorite libraries\r\n* SummingBird: <https://github.com/twitter/summingbird>\r\n\r\n\r\n    \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}